# https://artillery.io/docs/script-reference/
config:
  payload: #for csv files
    path: "messages.csv"
    fields:
      - "messages" #name of row in csv file
    order: "sequence" #"sequence" loops from first row to last
  http:
    pool: 5

  environments: #for re-use across different environments (dev, staging, production)
    dev: #command line: artillery run -e dev loadTest.yml
      target: "http://192.168.99.100:3004"  #"http://0.0.0.0:3004"
      phases:
        - duration: 5 # seconds to run test
          arrivalRate: 1000 # number of virtual users per second

scenarios:
  - name: 'Add messages'
    flow:
    - post:
        url: "/message"
        json:
          message: "{{ messages }}"



#### Data ####


### 5 seconds 1000 AR ran in Docker containers

# Summary report @ 17:41:11(-0800) 2018-03-02
#   Scenarios launched:  5000
#   Scenarios completed: 5000
#   Requests completed:  5000
#   RPS sent: 432.53
#   Request latency:
#     min: 61.1
#     max: 6449.3
#     median: 3852
#     p95: 6298.8
#     p99: 6422.2
#   Scenario duration:
#     min: 74.9
#     max: 6453.7
#     median: 3853.2
#     p95: 6300
#     p99: 6423.1
#   Scenario counts:
#     Add messages: 5000 (100%)
#   Codes:
#     201: 5000



### 5 seconds, 100 AR, 5 replicas ran in Docker-swarm, 3 VMs
# Summary report @ 19:11:24(-0800) 2018-03-02
#   Scenarios launched:  5000
#   Scenarios completed: 5000
#   Requests completed:  5000
#   RPS sent: 134.44
#   Request latency:
#     min: 45.6
#     max: 31855.6
#     median: 17100.7
#     p95: 30591.4
#     p99: 31600.5
#   Scenario duration:
#     min: 58.2
#     max: 31856
#     median: 17101.3
#     p95: 30592
#     p99: 31601.2
#   Scenario counts:
#     Add messages: 5000 (100%)
#   Codes:
#     201: 5000




